/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2008 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 2.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 2000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 5.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AD_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Add_Sub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("buf_less")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clear")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Data_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Data_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_in";
}

SIGNAL("Data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("Data_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data_out";
}

SIGNAL("I_eq_15")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("I_less_7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("I_less_8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("J_ne_15")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("load_buffer")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("load_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("load_j")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("OE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RAE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RBE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel_Addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel_in";
}

SIGNAL("sel_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sel_in";
}

SIGNAL("sel_num")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("WE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("buff")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("buff[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("buff[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "buff";
}

SIGNAL("i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("i[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "i";
}

SIGNAL("i[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "i";
}

SIGNAL("i[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "i";
}

SIGNAL("i[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "i";
}

SIGNAL("j")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("j[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "j";
}

SIGNAL("j[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "j";
}

SIGNAL("j[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "j";
}

SIGNAL("j[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "j";
}

SIGNAL("QB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("QB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("QB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "QB";
}

SIGNAL("temp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("temp[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp";
}

SIGNAL("temp[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp";
}

SIGNAL("temp[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp";
}

SIGNAL("temp[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "temp";
}

TRANSITION_LIST("AD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("AD_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("Add_Sub")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1680.0;
	}
}

TRANSITION_LIST("buf_less")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("clear")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("Data_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1920.0;
	}
}

TRANSITION_LIST("Data_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1940.0;
	}
}

TRANSITION_LIST("Data_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1970.0;
	}
}

TRANSITION_LIST("Data_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1930.0;
	}
}

TRANSITION_LIST("Data_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1920.0;
	}
}

TRANSITION_LIST("Data_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1920.0;
	}
}

TRANSITION_LIST("Data_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1930.0;
	}
}

TRANSITION_LIST("Data_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1940.0;
	}
}

TRANSITION_LIST("Data_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 6;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("Data_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 95.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 1640.0;
	}
}

TRANSITION_LIST("I_eq_15")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1825.0;
	}
}

TRANSITION_LIST("I_less_7")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 65.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 1695.0;
	}
}

TRANSITION_LIST("I_less_8")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 1725.0;
	}
}

TRANSITION_LIST("J_ne_15")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("load_buffer")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1700.0;
	}
}

TRANSITION_LIST("load_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1580.0;
	}
}

TRANSITION_LIST("load_j")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1680.0;
	}
}

TRANSITION_LIST("OE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1640.0;
	}
}

TRANSITION_LIST("RAE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
			LEVEL 0 FOR 5.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1640.0;
	}
}

TRANSITION_LIST("RBE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1710.0;
	}
}

TRANSITION_LIST("sel_Addr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 1920.0;
	}
}

TRANSITION_LIST("sel_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1580.0;
	}
}

TRANSITION_LIST("sel_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1650.0;
	}
}

TRANSITION_LIST("sel_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("sel_num")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1650.0;
	}
}

TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("WE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 265.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1650.0;
	}
}

TRANSITION_LIST("buff[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 1705.0;
	}
}

TRANSITION_LIST("buff[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("buff[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("buff[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("buff[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 1705.0;
	}
}

TRANSITION_LIST("buff[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 1705.0;
	}
}

TRANSITION_LIST("buff[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("buff[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("i[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1725.0;
	}
}

TRANSITION_LIST("i[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1695.0;
	}
}

TRANSITION_LIST("i[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1695.0;
	}
}

TRANSITION_LIST("i[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1725.0;
	}
}

TRANSITION_LIST("j[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("j[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1685.0;
	}
}

TRANSITION_LIST("j[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1705.0;
	}
}

TRANSITION_LIST("j[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1685.0;
	}
}

TRANSITION_LIST("QB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 1715.0;
	}
}

TRANSITION_LIST("QB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("QB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("QB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("QB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 1715.0;
	}
}

TRANSITION_LIST("QB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 1715.0;
	}
}

TRANSITION_LIST("QB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("QB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("temp[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 1695.0;
	}
}

TRANSITION_LIST("temp[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 1700.0;
	}
}

TRANSITION_LIST("temp[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 1650.0;
	}
}

TRANSITION_LIST("temp[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1650.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "load_j";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel_num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Add_Sub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "j";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "j[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "j[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "j[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "j[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "load_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "i[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "i[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "i[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "i[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "RBE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "sel_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "sel_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "QB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "QB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "QB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "buff";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "buff[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "buff[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "temp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
	CHILDREN = 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "temp[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "temp[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "temp[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "temp[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 39;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
	CHILDREN = 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "Data_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "load_buffer";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RAE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clear";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59, 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "Data_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "sel_Addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AD_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "buf_less";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "I_eq_15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "I_less_7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "I_less_8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "J_ne_15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
